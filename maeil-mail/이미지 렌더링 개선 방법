1. <strong>이미지 포맷 최적화</strong>
  - 전통적인 JPEG나 PNG 대신, 압축 효율이 높은 WebP 또는 AVIF와 같은 최신 포맷으로 변환
  - 이미지 품질을 유지하면서 파일 크기를 크게 줄여주는데, 일부 구버전의 브라우저에서는 이미지 포맷을 지원하지 않으므로, 호환성을 고려해야 한다.

2. <strong>이미지 사이즈 조정</strong>
  - 화면에 노출되는 크기에 비해 이미지가 과도하게 크면 이미지를 작게 리사이징할 수 있다.
  - 다양한 해상도에 대응하기 위해 Responsive Images, 즉 srcset과 sizes 속성을 활용할 수 있다.

3. <strong>지연 로딩(Lazy Loading)</strong>
  - 사용자가 화면에 스크롤할 때 해당 위치에 도달하는 이미지가 로드되도록 설정하는 방법
  - 지연 로딩을 통해 초기 로딩 속도를 개선할 수 있다.
  - HTML loading='lazy' 속성을 통해 구현하며, 불필요한 이미지 로드를 방지할 수 있다.

4. <strong>CDN(Content Delivery Network)</strong>
  - CDN 적용 시 사용자가 지리적으로 가까운 서버에서 이미지를 다운로드하여 로딩 속도를 단축시킬 수 있다.

*<strong>WebP나 AVIF의 브라우저 호환성 문제 해결</strong>
HTML의 <picture> 요소를 통해 fallback 이미지를 적용할 수 있다. picture 태그 내부에 WebP나 AVIF와 같은 고효율 포맷을 우선 설정하고, 브라우저가 지원하지 않을 경우 JPEG나 PNG 같은 포맷을 로드하도록 할 수 있다.

<picture>
  <source srcset="image.avif" type="image/avif">
  <source srcset="image.webp" type="image/webp"/>
  <img src="image.jpg" alt="Image description"/>
</picture>
```
